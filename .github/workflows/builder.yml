name: C++ Builder

on: 
  push:
    branches:
    - moltenvk-text

jobs:

  # build-win:
  #  name: Windows Build
  #  runs-on: windows-latest
  #  strategy:
  #    matrix: 
  #      conf: [Release]
  #  steps:
  #   - name: Download Repository
  #     uses: actions/checkout@v2
  #     with:
  #       submodules: 'true'
  #   - name: Setup Environment
  #     uses: microsoft/setup-msbuild@v1.0.2
  #   - name: Install
  #     run: ./tools/setup_win.bat -s
  #   - name: Build
  #     run: MSBuild.exe ./build/elemd.sln /p:Configuration=${{ matrix.conf }}
  #   - name: Upload
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: elemd-win-${{ matrix.conf }}
  #       path: ./build/${{ matrix.conf }}/elemd.dll
    
  # build-linux:
  #  name: Linux Build
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix: 
  #      conf: [Release]
  #  steps:
  #   - name: Download Repository
  #     uses: actions/checkout@v2
  #     with:
  #       submodules: 'true'
  #   - name: Setup Environment
  #     run: |
  #       sudo chmod +x ./tools/*.sh
  #       sudo apt update
  #       sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev
  #   - name: Install
  #     run: sudo ./tools/setup_nix.sh
  #   - name: Build
  #     run: |
  #       cd ./build
  #       sudo make config=${{ matrix.conf }}
  #   - name: Upload
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: elemd-linux-${{ matrix.conf }}
  #       path: ./build/libelemd.so

  build-mac:
   name: Mac Build
   runs-on: macos-latest
   strategy:
     matrix: 
       conf: [Release]
   steps:
    - name: Download Repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Setup Environment
      run: |
        sudo chmod +x ./tools/*.sh
    - name: Generate Solution
      run: |
        sudo ./tools/generate_project_mac.sh
    - name: Debug
      if: ${{ always() }}
      run: |
        cd ./build
        ls -la
        tail -n 1000 vcpkg-manifest-install-out.log
        cd ../external/vcpkg/buildtrees/moltenvk/
        ls -la
    - name: Build
      run: |
        cd ./build
        sudo make config=${{ matrix.conf }}
    - name: Upload
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: elemd-mac-${{ matrix.conf }}
        path: |
          ./external/vcpkg/packages/
          ./build/
